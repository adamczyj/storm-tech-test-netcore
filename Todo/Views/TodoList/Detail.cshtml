@using Todo.Data.Entities
@using Todo.Models.TodoItems
@using Todo.Models.TodoLists
@using Todo.Services.Gravatar

@inject IGravatarClient GravatarClient

@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}


<h2>@ViewData["Title"]</h2>

<div class="col-md-6">
    @await Html.PartialAsync("~/Views/TodoItem/CreateItemPartial.cshtml", new TodoItemCreateFields(Model.TodoListId))

    <ul id="grid" class="list-group">
        <li class="list-group-item">
            <button onclick="TodoItems.showAll()">Show all</button>
            <button onclick="TodoItems.hideDone()">Hide done</button>
        </li>

        <li class="list-group-item">
            <button onclick="TodoItems.orderByRank()">Order by rank</button>
            <button onclick="TodoItems.orderByImportance()">Order by importance</button>
        </li>
    </ul>
</div>

@section Scripts
{
    <script type="text/javascript">
        var TodoItems = ((todoItems) => {
            todoItems.TodoListItemContext = {
                orderByRank: "@ItemsOrderOption.ByRank",
                orderByImportance: "@ItemsOrderOption.ByImportance",
                todoListId: @Model.TodoListId,
                importanceHigh: @((int) Importance.High),
                importanceLow: @((int) Importance.Low)
            };

            return todoItems;
        })(TodoItems || {});

        $(function() {
            TodoItems.loadItems();
        });
    </script>

    <script src="~/js/todo-items.js" asp-append-version="true"></script>
    <script src="~/js/create-item.js" asp-append-version="true"></script>
}